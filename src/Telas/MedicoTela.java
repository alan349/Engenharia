/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;

import Entidades.Atendimento;
import Entidades.Paciente;
import Entidades.Prontuario;
import Entidades.Usuario;
import Repositorios.AtendimentoRepositorio;
import Repositorios.PacienteRepositorio;
import Repositorios.ProntuarioRepositorio;
import Repositorios.UsuarioRepositorio;
import java.awt.Rectangle;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import jiconfont.icons.FontAwesome;
import jiconfont.swing.IconFontSwing;

/**
 *
 * @author Alan
 */
public class MedicoTela extends javax.swing.JFrame {

    public static String user;

    /**
     * Creates new form MedicoTela
     *
     * @param usuario
     */
    public MedicoTela(String usuario) {
        user = usuario;
        initComponents();
        IconFontSwing.register(FontAwesome.getIconFont());
        Icon iconpront = IconFontSwing.buildIcon(FontAwesome.FILES_O, 15);
        Icon iconagend = IconFontSwing.buildIcon(FontAwesome.CLOCK_O, 15);
        jTabbedPane1.setIconAt(0, iconpront);
        jTabbedPane1.setIconAt(1, iconagend);
        carregartabela();
        TabelaAtendimento(user);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jButton2 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbProntu = new javax.swing.JTable();
        btnCadastrar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jbData = new javax.swing.JRadioButton();
        jbPaciente = new javax.swing.JRadioButton();
        txtData = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbAtendimento = new javax.swing.JTable();

        jScrollPane1.setViewportView(jEditorPane1);

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setName("Prontuários"); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(960, 540));

        tbProntu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Nome"
            }
        ));
        tbProntu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProntuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbProntu);

        btnCadastrar.setText("Inserir Novo Prontuario");
        btnCadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCadastrarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(339, Short.MAX_VALUE)
                .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(339, 339, 339))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(btnCadastrar)
                .addGap(25, 25, 25))
        );

        jTabbedPane1.addTab("   Prontuários", jPanel1);

        jLabel3.setText("Buscar por:");

        buttonGroup1.add(jbData);
        jbData.setSelected(true);
        jbData.setText("Data");
        jbData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbDataMouseClicked(evt);
            }
        });
        jbData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDataActionPerformed(evt);
            }
        });

        buttonGroup1.add(jbPaciente);
        jbPaciente.setText("Paciente");
        jbPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbPacienteMouseClicked(evt);
            }
        });

        txtData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDataKeyReleased(evt);
            }
        });

        jLabel5.setText("Digite o dado desejado:");

        tbAtendimento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Hora", "Paciente"
            }
        ));
        jScrollPane3.setViewportView(tbAtendimento);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 847, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel3))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jbData)
                                .addGap(10, 10, 10)
                                .addComponent(jbPaciente)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(105, 105, 105)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbData)
                            .addComponent(jbPaciente)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Agendamentos", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Prontuários");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbProntuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProntuMouseClicked
        // TODO add your handling code here:
        ProntuarioRepositorio prontuarioRepositorio = new ProntuarioRepositorio();
        UsuarioRepositorio usuarioRepositorio = new UsuarioRepositorio();
        Integer row = tbProntu.getSelectedRow();
        String nome = (String) tbProntu.getValueAt(row, 1);
        Prontuario prontuario = prontuarioRepositorio.buscarPorNome(nome);
        Usuario usuario = usuarioRepositorio.buscarPorUsuario(user);
        new ProntuarioTela(prontuario.getPaciente(), usuario).alterarProntuario(prontuario);


    }//GEN-LAST:event_tbProntuMouseClicked

    private void btnCadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCadastrarMouseClicked
        // TODO add your handling code here:
        PacienteRepositorio pacienteRepositorio = new PacienteRepositorio();
        UsuarioRepositorio usuarioRepositorio = new UsuarioRepositorio();
        String paci = JOptionPane.showInputDialog("Insira o CPF do paciente:");
        Paciente paciente = pacienteRepositorio.buscarPorCpf(paci);
        try {
            Usuario usuario = usuarioRepositorio.buscarPorUsuario(user);
            new ProntuarioTela(paciente, usuario).setVisible(true);
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Usuario nao encontrado , por favor cadastra-lo na secretaria");
        }
             
       


    }//GEN-LAST:event_btnCadastrarMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        carregartabela();
    }//GEN-LAST:event_formWindowActivated

    private void jbDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbDataMouseClicked
        // TODO add your handling code here:
        txtData.setText(null);
    }//GEN-LAST:event_jbDataMouseClicked

    private void jbDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbDataActionPerformed

    private void jbPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbPacienteMouseClicked
        // TODO add your handling code here:
        txtData.setText(null);
    }//GEN-LAST:event_jbPacienteMouseClicked

    private void txtDataKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataKeyReleased
        // TODO add your handling code here:
        UsuarioRepositorio usuarioRepositorio = new UsuarioRepositorio();
        String medico = usuarioRepositorio.buscarPorUsuario(user).getNome();
        if (jbData.isSelected()) {
            if (txtData.getText().length() == 10 && tbAtendimento.getRowCount() != 0) {
                TabelaAtendimento(medico);
            }
        } else if (jbPaciente.isSelected() && tbAtendimento.getRowCount() != 0) {
            TabelaAtendimento(medico);
        }
        if (txtData.getText().isEmpty() && tbAtendimento.getRowCount() != 0) {
            TabelaAtendimento(medico);
        }

        Integer rows = tbAtendimento.getRowCount();
        Integer col = null;
        for (int i = 0; i < rows; i++) {
            if (jbData.isSelected()) {
                col = 0;
            } else if (jbPaciente.isSelected()) {
                col = 2;
            }
            if (tbAtendimento.getValueAt(i, col).equals(txtData.getText())) {
                tbAtendimento.setRowSelectionInterval(i, i);
                tbAtendimento.scrollRectToVisible(new Rectangle(tbAtendimento.getCellRect(i, 0, true)));
                Thread.currentThread().stop();
            } else {
            }

        }
    }//GEN-LAST:event_txtDataKeyReleased
 public void TabelaAtendimento(String user) {
        AtendimentoRepositorio atendimentoRepositorio = new AtendimentoRepositorio();
        UsuarioRepositorio usuarioRepositorio = new UsuarioRepositorio();
        String medico = usuarioRepositorio.buscarPorUsuario(user).getNome();
        List<Atendimento> atendimentos = null;
        Date dt = null;
        if (!txtData.getText().isEmpty() && jbPaciente.isSelected()) {
            atendimentos = atendimentoRepositorio.buscarPorPacienteMedico(medico, txtData.getText());
            if (atendimentos == null || atendimentos.isEmpty()) {
                Thread.currentThread().stop();
            }
        } else if (!txtData.getText().isEmpty() && jbData.isSelected()) {
            try {
                dt = new SimpleDateFormat("dd/MM/yyyy").parse(txtData.getText());
            } catch (ParseException ex) {
                Logger.getLogger(AdminTela.class.getName()).log(Level.SEVERE, null, ex);
            }
            SimpleDateFormat fm = new SimpleDateFormat("yyyy-MM-dd");
            String formatted = fm.format(dt);
            atendimentos = atendimentoRepositorio.buscarPorDataMedico(medico, formatted);
        } else {
            atendimentos = atendimentoRepositorio.buscarPorMedico(medico);
        }

        String[] colunasTabela = new String[]{"Data", "Hora", "Paciente"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
        tbAtendimento.setModel(modeloTabela);
        if (atendimentos == null && txtData.getText().isEmpty()) {
           
            Thread.currentThread().stop();
        } else {

            for (Atendimento atendimento : atendimentos) {
                LocalDate local = LocalDate.parse(atendimento.getId().getData());
                String data = local.format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
                modeloTabela.addRow(new Object[]{data, atendimento.getId().getHora(),
                    atendimento.getPaciente().getNome()});
            }
        }
   
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedicoTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedicoTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedicoTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedicoTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedicoTela(user).setVisible(true);

            }
        });

    }

    @Override
    public void dispose() {
        new Login().setVisible(true);
        super.dispose();
    }

    public void carregartabela() {
        ProntuarioRepositorio prontuarioRepositorio = new ProntuarioRepositorio();
        List<Prontuario> prontuarios = prontuarioRepositorio.buscarTudoOrdenado();
        String[] colunasTabela = new String[]{"Data", "Nome"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunasTabela) {
        };
        tbProntu.setModel(modeloTabela);
        for (Prontuario prontuario : prontuarios) {
            modeloTabela.addRow(new Object[]{prontuario.getData(), prontuario.getPaciente().getNome()});

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton2;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton jbData;
    private javax.swing.JRadioButton jbPaciente;
    private javax.swing.JTable tbAtendimento;
    private javax.swing.JTable tbProntu;
    private javax.swing.JTextField txtData;
    // End of variables declaration//GEN-END:variables
}
